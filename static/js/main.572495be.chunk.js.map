{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/Shapes/InputShape.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","PropTypes","string","isRequired","bool","func","inputValue","inputName","error","addChange","htmlFor","toUpperCase","slice","type","name","id","value","onChange","classNames","fields","errors","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","NewMovie","state","addNewMovie","event","preventDefault","newMovie","Object","entries","forEach","setState","some","props","addMovie","target","onSubmit","this","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.572495be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputShape } from '../Shapes/InputShape';\n\nconst titleFormatting = (title) => {\n  return title[0].toUpperCase() + title.slice(1);\n};\n\nexport const Input = ({ inputValue, inputName, error, addChange }) => {\n  return (\n    <div className=\"field\">\n      <label\n        htmlFor={inputName}\n      >\n        {\n          titleFormatting(inputName)\n        }\n        <input\n          type=\"text\"\n          name={inputName}\n          id={inputName}\n          value={inputValue}\n          onChange={addChange}\n        />\n\n        <p className={classNames(\n          { 'ui red message': error },\n        )}\n        >\n          {\n            error\n              ? `Field ${inputName} is required`\n              : ''\n          }\n        </p>\n      </label>\n    </div>\n  );\n};\n\nInput.propTypes = InputShape;\n","import PropTypes from 'prop-types';\n\nexport const InputShape = {\n  inputValue: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n  addChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst fields = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nconst errors = {\n  titleError: false,\n  descriptionError: false,\n  imgUrlError: false,\n  imdbUrlError: false,\n  imdbIdError: false,\n};\n\nexport class NewMovie extends Component {\n  state = {\n    ...fields,\n    ...errors,\n  };\n\n  addNewMovie = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    Object.entries(newMovie).forEach(([key, value]) => {\n      if (value === '') {\n        this.setState({\n          [`${key}Error`]: true,\n        });\n      }\n    });\n\n    const hasError = Object.entries(newMovie)\n      .some(([key, value]) => value === '');\n\n    if (hasError) {\n      return;\n    }\n\n    this.props.addMovie(newMovie);\n\n    this.setState({\n      ...fields,\n    });\n  }\n\n  onChange = (event) => {\n    this.setState({\n      [`${event.target.name}`]: event.target.value,\n      [`${event.target.name}Error`]: false,\n    });\n  }\n\n  render() {\n    return (\n      <form\n        className=\"ui form\"\n        onSubmit={this.addNewMovie}\n      >\n        {\n          Object.entries(fields).map(([key, value]) => (\n            <Input\n              key={key}\n              inputValue={this.state[key]}\n              inputName={key}\n              error={this.state[`${key}Error`]}\n              addChange={this.onChange}\n            />\n          ))\n        }\n\n        <button\n          className=\"ui primary basic button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}